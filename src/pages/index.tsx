import { useState, useEffect, useCallback } from 'react';

// Styles
import styles from '@/styles/Home.module.css';

// Components
import ResponsiveHeatMap from '@/components/ResponsiveHeatMap/ResponsiveHeatMap';
import RangeSelector from '@/components/RangeSelector/RangeSelector';
import Select, { MultiValue } from 'react-select';
import Head from 'next/head';
import Image from 'next/image';
import Navbar from '../components/NavBar';

// Types
import { Gene, FilterType, Option } from '../types/types';

// Hooks
import useHeatMapData from '@/hooks/useHeatMapData';
import useFiltersOptionList from '@/hooks/useFiltersOptionList';

// Constants
const STATIC_DATA_URL = 'api/staticdata';

export default function Home() {
  const [data, setData] = useState<Gene[]>([]);
  const [filteredData, setFilteredData] = useState<Gene[]>([]);
  const [isLoading, setIsLoading] = useState<Boolean>(true);
  const [selectedPhenotypeOptions, setSelectedPhenotypeOptions] = useState<
    MultiValue<Option>
  >([]);
  const [selectedGenesOptions, setSelectedGenesOptions] = useState<
    MultiValue<Option>
  >([]);
  const fetchApi = useCallback(async () => {
    const response = await fetch(STATIC_DATA_URL);
    const responseJson = await response.json();

    setData(responseJson);
    setFilteredData(responseJson);
    setIsLoading(false);
  }, []);

  useEffect(() => {
    //fix for nivo getBBox issue: https://github.com/plouc/nivo/issues/2162#issuecomment-1467184517
    // @ts-ignore
    HTMLCanvasElement.prototype.getBBox = function () {
      return { width: this.offsetWidth, height: this.offsetHeight };
    };
  }, []);

  useEffect(() => {
    fetchApi();
  }, [fetchApi]);

  const { phenotypeTermOptionList, genesOptionList, selectStyles } =
    useFiltersOptionList(data);
  const {
    convertedData,
    filterByPhenotypeCountTotalRange,
    filterByGene,
    filterByPhenotype,
  } = useHeatMapData(data, filteredData, phenotypeTermOptionList);

  const handleRangeSelector = (values: number[]) => {
    setSelectedGenesOptions([]);
    setSelectedPhenotypeOptions([]);
    filterByPhenotypeCountTotalRange(values[0]);
  };

  const handleGeneSelect = (selectedOptions: MultiValue<Option>) => {
    setSelectedGenesOptions(selectedOptions);
    setSelectedPhenotypeOptions([]);
    filterByGene(selectedOptions);
  };

  const handlePhenotypeSelect = (selectedOptions: MultiValue<Option>) => {
    setSelectedPhenotypeOptions(selectedOptions);
    setSelectedGenesOptions([]);
    filterByPhenotype(selectedOptions);
  };

  return (
    <>
      <Head>
        <title>EBI02126 Technical task</title>
        <meta
          name="description"
          content="Technical Challenge generated by create next app"
        />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar />
      <main className={styles.main}>
        <section className={styles.intro}>
          <h1 className={styles.title}>Introduction to IMPC Embryo Data</h1>
          <p>
            Up to one third of homozygous knockout lines are lethal, which means
            no homozygous mice or less than expected are observed past the
            weaning stage (IMPC{' '}
            <a
              href={
                'https://mousephenotype.org/impress/ProcedureInfo?action=list&procID=703&pipeID=7'
              }
            >
              Viability Primary Screen procedure
            </a>
            ). Early death may occur during embryonic development or soon after
            birth, during the pre-weaning stage. For this reason, the IMPC
            established a{' '}
            <a href="https://mousephenotype.org/impress">
              systematic embryonic phenotyping pipeline
            </a>{' '}
            to morphologically evaluate mutant embryos to ascertain the primary
            perturbations that cause early death and thus gain insight into gene
            function.
          </p>
          <p>
            As determined in IMPReSS (see interactive diagram{' '}
            <a href="https://mousephenotype.org/impress">here</a>, all embryonic
            lethal lines undergo gross morphology assessment at E12.5 (embryonic
            day 12.5) to determine whether defects occur earlier or later during
            embryonic development. A comprehensive imaging platform is then used
            to assess dysmorphology. Embryo gross morphology, as well as 2D and
            3D imaging are actively being implemented by the IMPC for lethal
            lines.
          </p>
          <p>
            Read more in our paper on{' '}
            <a href="https://europepmc.org/article/PMC/5295821">
              High-throughput discovery of novel developmental phenotypes,
              Nature 2016.
            </a>
          </p>

          <h2 className={styles.title}>Accessing Embryo Phenotype Data</h2>
          <span>Embryo phenotype data can be accessed in multiple ways:</span>
          <ul>
            <li>
              <a href="https://github.com/mpi2/EBI02126-web-developer/blob/main/data/embryo_imaging">
                Embryo Images: interactive heatmap
              </a>{' '}
              A compilation of all our Embryo Images, organised by gene and life
              stage, with access to the Interactive Embryo Viewer, where you can
              compare mutants and wild types side by side and rotate 2D and 3D
              images; we also provide access to our external partners embryo
              images.
            </li>
            <li>
              <a href="Embryo Vignettes">Embryo Vignettes</a> Showcase of best
              embryo images with detailed explanations.
            </li>
            <li>
              From the FTP site, latest release All our results. Reports need to
              be filtered by a dedicated column, Life Stage (E9.5, E12.5, E15.5
              and E18.5). Please check the README file or see documentation{' '}
              <a href="https://www.mousephenotype.org/help/non-programmatic-data-access/">
                here.
              </a>
            </li>
            <li>
              Using the REST API (see documentation{' '}
              <a href="https://www.mousephenotype.org/help/programmatic-data-access/">
                here
              </a>
              )
            </li>
          </ul>

          <h2 className={styles.title}>Determining Lethal Lines</h2>
          <p>
            The IMPC assesses each gene knockout line for viability (Viability
            Primary Screen{' '}
            <a href="https://www.mousephenotype.org/impress/ProcedureInfo?action=list&procID=703&pipeID=7">
              IMPC_VIA_001
            </a>
            ). In this procedure, the proportion of homozygous pups is
            determined soon after birth, during the preweaning stage, in litters
            produced from mating heterozygous animals. A line is declared lethal
            if no homozygous pups for the null allele are detected at weaning
            age, and subviable if pups homozygous for the null allele constitute
            less than 12.5% of the litter.
          </p>
          <p>
            Lethal strains are further phenotyped in the{' '}
            <a href="https://www.mousephenotype.org/impress">
              embryonic phenotyping pipeline
            </a>
            . For embryonic lethal and subviable strains, heterozygotes are
            phenotyped in the IMPC{' '}
            <a href="https://www.mousephenotype.org/impress">
              adult phenotyping pipeline
            </a>
            .
          </p>
          <div className={styles.images}>
            <Image
              src="/../public/img/embryo_image_1.jpeg"
              width={200}
              height={200}
              alt="Embryo example 1"
            />
            <Image
              src="/../public/img/embryo_image_2.jpg"
              width={250}
              height={200}
              alt="Embryo example 2"
            />
            <Image
              src="/../public/img/embryo_image_3.jpeg"
              width={300}
              height={200}
              alt="Embryo example 3"
            />
          </div>
        </section>

        {isLoading ? (
          <span>Loading...</span>
        ) : (
          <>
            <form className={styles.filters}>
              <div className={styles.geneFilter}>
                <label className={styles.filterLabel}>Filter by Gene</label>
                <Select
                  isMulti
                  isSearchable
                  options={genesOptionList}
                  placeholder="Select Genes"
                  value={selectedGenesOptions}
                  onChange={handleGeneSelect}
                  styles={selectStyles}
                />
              </div>
              <div className={styles.phenotypeFilter}>
                <label className={styles.filterLabel}>
                  Filter by significant phenotype system
                </label>
                <Select
                  placeholder="Select Phenotype system"
                  isMulti
                  isSearchable
                  options={phenotypeTermOptionList}
                  value={selectedPhenotypeOptions}
                  onChange={handlePhenotypeSelect}
                  styles={selectStyles}
                />
              </div>
              <div className={styles.rangeFilter}>
                <label className={styles.filterLabel}>
                  Filter by significant phenotype system
                </label>
                <RangeSelector onFinalChange={handleRangeSelector} />
              </div>
            </form>
            <div className={styles.heatMap}>
              <ResponsiveHeatMap data={convertedData} />
            </div>
          </>
        )}
      </main>
    </>
  );
}
